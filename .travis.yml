language: c++

os:
  - linux

sudo: required

before_install:
  - echo $LANG
  - echo $LC_ALL

matrix:
  include:
    - os: linux
      env: TOOLSET=clang-3.4 VALGRIND=1
      addons: &clang34

    - os: linux
      env: TOOLSET=clang-3.5 VALGRIND=1
      addons: &clang35

    - os: linux
      env: TOOLSET=clang-3.6 VALGRIND=1
      addons: &clang36

    - os: linux
      env: TOOLSET=clang-3.7 VALGRIND=1
      addons: &clang37

    - os: linux
      env: TOOLSET=gcc-4.8 VALGRIND=1
      addons: &gcc48

    - os: linux
      env: TOOLSET=gcc-4.9 VALGRIND=1
      addons: &gcc49

    - os: linux
      env: TOOLSET=gcc-5 VALGRIND=1
      addons: &gcc5

before_install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo add-apt-repository ppa:boost-latest/ppa -y
  - sudo apt-get update -q
  - sudo apt-get install -y boost1.55
  - sudo apt-get install -y ${TOOLSET}
  - sudo apt-get install -y valgrind

before_script:
  - (cd build && ./bootstrap.sh)

script:
  - if [ "${VARIANT}" == "" ]; then export VARIANT=debug; fi
  - if [ "${TOOLSET}" != "" ]; then ./build/b2 -j2 --toolset=${TOOLSET} debug-symbols=off variant=${VARIANT} testsuite; fi
  - if [ "${VALGRIND}" != "" ]; then find -type f -executable -name testsuite | xargs -i% valgrind --error-exitcode=-1 %; fi
